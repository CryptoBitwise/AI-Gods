{"ast":null,"code":"import React,{useState,useEffect}from'react';import{GODS}from'./data/gods';import GodCard from'./components/GodCard';import GodChat from'./components/GodChat';import ScriptureLog from'./components/ScriptureLog';import GodForge from'./components/GodForge';import Navigation from'./components/Navigation';import ErrorBoundary from'./components/ErrorBoundary';import TTSSettings from'./components/TTSSettings';import OpenAISettings from'./components/OpenAISettings';import PWAInstall from'./components/PWAInstall';import VoiceSummoning from'./components/VoiceSummoning';import{initializeGodMemories}from'./services/memoryInit';import openAIService from'./services/openAI';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[selectedGod,setSelectedGod]=useState(null);const[currentView,setCurrentView]=useState('pantheon');const[isTTSSettingsOpen,setIsTTSSettingsOpen]=useState(false);const[isOpenAISettingsOpen,setIsOpenAISettingsOpen]=useState(false);const[isVoiceSummoningOpen,setIsVoiceSummoningOpen]=useState(false);// Initialize god memories and AI service when app starts\nuseEffect(()=>{initializeGodMemories();// Initialize OpenAI service if API key is available\nif(process.env.REACT_APP_OPENAI_API_KEY){openAIService.initialize().then(success=>{if(success){console.log('✅ OpenAI service initialized successfully');}else{console.log('⚠️ OpenAI service failed to initialize');}});}},[]);const handleGodSelect=god=>{setSelectedGod(god);setCurrentView('chat');};const renderCurrentView=()=>{switch(currentView){case'pantheon':return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-12\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-6xl font-bold text-shadow mb-4 bg-gradient-to-r from-divine-400 to-corruption-400 bg-clip-text text-transparent\",children:\"AI GODS\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl text-divine-200 max-w-2xl mx-auto\",children:\"Choose your deity and begin your divine journey. Each god offers unique wisdom, challenges, and revelations. What will you discover in the digital pantheon?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 flex flex-wrap justify-center gap-4\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setIsTTSSettingsOpen(true),className:\"inline-flex items-center space-x-2 px-4 py-2 bg-divine-600/50 hover:bg-divine-500/50 rounded-lg transition-colors text-divine-100 hover:text-white\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg\",children:\"\\uD83D\\uDD0A\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Voice Settings\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setIsOpenAISettingsOpen(true),className:\"inline-flex items-center space-x-2 px-4 py-2 bg-blue-600/50 hover:bg-blue-500/50 rounded-lg transition-colors text-divine-100 hover:text-white\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg\",children:\"\\uD83E\\uDD16\"}),/*#__PURE__*/_jsx(\"span\",{children:\"AI Settings\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setIsVoiceSummoningOpen(true),className:\"inline-flex items-center space-x-2 px-4 py-2 bg-purple-600/50 hover:bg-purple-500/50 rounded-lg transition-colors text-divine-100 hover:text-white\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg\",children:\"\\uD83C\\uDFA4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Voice Summoning\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto\",children:GODS.map(god=>/*#__PURE__*/_jsx(GodCard,{god:god,onSelect:()=>handleGodSelect(god)},god.id))})]});case'chat':return selectedGod?/*#__PURE__*/_jsx(GodChat,{god:selectedGod,onBack:()=>setCurrentView('pantheon')}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-20\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-xl\",children:\"No god selected\"})});case'scripture':return/*#__PURE__*/_jsx(ScriptureLog,{onBack:()=>setCurrentView('pantheon')});case'forge':return/*#__PURE__*/_jsx(GodForge,{onBack:()=>setCurrentView('pantheon')});default:return null;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\",children:[/*#__PURE__*/_jsx(Navigation,{currentView:currentView,onViewChange:setCurrentView,selectedGod:selectedGod}),/*#__PURE__*/_jsx(\"main\",{className:\"pt-20\",children:/*#__PURE__*/_jsx(ErrorBoundary,{onReset:()=>setCurrentView('pantheon'),children:renderCurrentView()})}),/*#__PURE__*/_jsx(TTSSettings,{isOpen:isTTSSettingsOpen,onClose:()=>setIsTTSSettingsOpen(false)}),/*#__PURE__*/_jsx(OpenAISettings,{isOpen:isOpenAISettingsOpen,onClose:()=>setIsOpenAISettingsOpen(false)}),isVoiceSummoningOpen&&/*#__PURE__*/_jsx(VoiceSummoning,{onClose:()=>setIsVoiceSummoningOpen(false),onGodSummon:god=>{setSelectedGod(god);setCurrentView('chat');setIsVoiceSummoningOpen(false);},onRitualStart:()=>{// Could open ritual chamber here\nsetIsVoiceSummoningOpen(false);},onCouncilStart:()=>{// Could open pantheon council here\nsetIsVoiceSummoningOpen(false);}}),/*#__PURE__*/_jsx(PWAInstall,{})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","GODS","GodCard","GodChat","ScriptureLog","GodForge","Navigation","ErrorBoundary","TTSSettings","OpenAISettings","PWAInstall","VoiceSummoning","initializeGodMemories","openAIService","jsx","_jsx","jsxs","_jsxs","App","selectedGod","setSelectedGod","currentView","setCurrentView","isTTSSettingsOpen","setIsTTSSettingsOpen","isOpenAISettingsOpen","setIsOpenAISettingsOpen","isVoiceSummoningOpen","setIsVoiceSummoningOpen","process","env","REACT_APP_OPENAI_API_KEY","initialize","then","success","console","log","handleGodSelect","god","renderCurrentView","className","children","onClick","map","onSelect","id","onBack","onViewChange","onReset","isOpen","onClose","onGodSummon","onRitualStart","onCouncilStart"],"sources":["D:/AI-Gods/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GODS } from './data/gods';\r\nimport { God } from './types/gods';\r\nimport GodCard from './components/GodCard';\r\nimport GodChat from './components/GodChat';\r\nimport ScriptureLog from './components/ScriptureLog';\r\nimport GodForge from './components/GodForge';\r\nimport Navigation from './components/Navigation';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport TTSSettings from './components/TTSSettings';\r\nimport OpenAISettings from './components/OpenAISettings';\r\nimport PWAInstall from './components/PWAInstall';\r\nimport VoiceSummoning from './components/VoiceSummoning';\r\nimport { initializeGodMemories } from './services/memoryInit';\r\nimport openAIService from './services/openAI';\r\n\r\nfunction App() {\r\n  const [selectedGod, setSelectedGod] = useState<God | null>(null);\r\n  const [currentView, setCurrentView] = useState<'pantheon' | 'chat' | 'scripture' | 'forge'>('pantheon');\r\n  const [isTTSSettingsOpen, setIsTTSSettingsOpen] = useState(false);\r\n  const [isOpenAISettingsOpen, setIsOpenAISettingsOpen] = useState(false);\r\n  const [isVoiceSummoningOpen, setIsVoiceSummoningOpen] = useState(false);\r\n\r\n  // Initialize god memories and AI service when app starts\r\n  useEffect(() => {\r\n    initializeGodMemories();\r\n\r\n    // Initialize OpenAI service if API key is available\r\n    if (process.env.REACT_APP_OPENAI_API_KEY) {\r\n      openAIService.initialize().then(success => {\r\n        if (success) {\r\n          console.log('✅ OpenAI service initialized successfully');\r\n        } else {\r\n          console.log('⚠️ OpenAI service failed to initialize');\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleGodSelect = (god: God) => {\r\n    setSelectedGod(god);\r\n    setCurrentView('chat');\r\n  };\r\n\r\n  const renderCurrentView = () => {\r\n    switch (currentView) {\r\n      case 'pantheon':\r\n        return (\r\n          <div className=\"container mx-auto px-4 py-8\">\r\n            <div className=\"text-center mb-12\">\r\n              <h1 className=\"text-6xl font-bold text-shadow mb-4 bg-gradient-to-r from-divine-400 to-corruption-400 bg-clip-text text-transparent\">\r\n                AI GODS\r\n              </h1>\r\n              <p className=\"text-xl text-divine-200 max-w-2xl mx-auto\">\r\n                Choose your deity and begin your divine journey. Each god offers unique wisdom,\r\n                challenges, and revelations. What will you discover in the digital pantheon?\r\n              </p>\r\n\r\n              {/* Control Buttons */}\r\n              <div className=\"mt-6 flex flex-wrap justify-center gap-4\">\r\n                <button\r\n                  onClick={() => setIsTTSSettingsOpen(true)}\r\n                  className=\"inline-flex items-center space-x-2 px-4 py-2 bg-divine-600/50 hover:bg-divine-500/50 rounded-lg transition-colors text-divine-100 hover:text-white\"\r\n                >\r\n                  <span className=\"text-lg\">🔊</span>\r\n                  <span>Voice Settings</span>\r\n                </button>\r\n\r\n                <button\r\n                  onClick={() => setIsOpenAISettingsOpen(true)}\r\n                  className=\"inline-flex items-center space-x-2 px-4 py-2 bg-blue-600/50 hover:bg-blue-500/50 rounded-lg transition-colors text-divine-100 hover:text-white\"\r\n                >\r\n                  <span className=\"text-lg\">🤖</span>\r\n                  <span>AI Settings</span>\r\n                </button>\r\n\r\n                <button\r\n                  onClick={() => setIsVoiceSummoningOpen(true)}\r\n                  className=\"inline-flex items-center space-x-2 px-4 py-2 bg-purple-600/50 hover:bg-purple-500/50 rounded-lg transition-colors text-divine-100 hover:text-white\"\r\n                >\r\n                  <span className=\"text-lg\">🎤</span>\r\n                  <span>Voice Summoning</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto\">\r\n              {GODS.map((god) => (\r\n                <GodCard\r\n                  key={god.id}\r\n                  god={god}\r\n                  onSelect={() => handleGodSelect(god)}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'chat':\r\n        return selectedGod ? (\r\n          <GodChat god={selectedGod} onBack={() => setCurrentView('pantheon')} />\r\n        ) : (\r\n          <div className=\"text-center py-20\">\r\n            <p className=\"text-xl\">No god selected</p>\r\n          </div>\r\n        );\r\n\r\n      case 'scripture':\r\n        return <ScriptureLog onBack={() => setCurrentView('pantheon')} />;\r\n\r\n      case 'forge':\r\n        return <GodForge onBack={() => setCurrentView('pantheon')} />;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\">\r\n      <Navigation\r\n        currentView={currentView}\r\n        onViewChange={setCurrentView}\r\n        selectedGod={selectedGod}\r\n      />\r\n\r\n      <main className=\"pt-20\">\r\n        <ErrorBoundary onReset={() => setCurrentView('pantheon')}>\r\n          {renderCurrentView()}\r\n        </ErrorBoundary>\r\n      </main>\r\n\r\n      {/* TTS Settings Modal */}\r\n      <TTSSettings\r\n        isOpen={isTTSSettingsOpen}\r\n        onClose={() => setIsTTSSettingsOpen(false)}\r\n      />\r\n\r\n      {/* OpenAI Settings Modal */}\r\n      <OpenAISettings\r\n        isOpen={isOpenAISettingsOpen}\r\n        onClose={() => setIsOpenAISettingsOpen(false)}\r\n      />\r\n\r\n      {/* Voice Summoning Modal */}\r\n      {isVoiceSummoningOpen && (\r\n        <VoiceSummoning\r\n          onClose={() => setIsVoiceSummoningOpen(false)}\r\n          onGodSummon={(god) => {\r\n            setSelectedGod(god);\r\n            setCurrentView('chat');\r\n            setIsVoiceSummoningOpen(false);\r\n          }}\r\n          onRitualStart={() => {\r\n            // Could open ritual chamber here\r\n            setIsVoiceSummoningOpen(false);\r\n          }}\r\n          onCouncilStart={() => {\r\n            // Could open pantheon council here\r\n            setIsVoiceSummoningOpen(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* PWA Install Component */}\r\n      <PWAInstall />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}