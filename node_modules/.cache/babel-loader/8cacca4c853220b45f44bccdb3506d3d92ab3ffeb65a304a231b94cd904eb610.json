{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI-Gods\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GODS } from './data/gods';\nimport GodCard from './components/GodCard';\nimport GodChat from './components/GodChat';\nimport ScriptureLog from './components/ScriptureLog';\nimport GodForge from './components/GodForge';\nimport Navigation from './components/Navigation';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport DebugBanner from './components/DebugBanner';\nimport TTSSettings from './components/TTSSettings';\nimport PWAInstall from './components/PWAInstall';\nimport { initializeGodMemories } from './services/memoryInit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedGod, setSelectedGod] = useState(null);\n  const [currentView, setCurrentView] = useState('pantheon');\n  const [isTTSSettingsOpen, setIsTTSSettingsOpen] = useState(false);\n\n  // Initialize god memories when app starts\n  useEffect(() => {\n    initializeGodMemories();\n  }, []);\n  const handleGodSelect = god => {\n    setSelectedGod(god);\n    setCurrentView('chat');\n  };\n  const renderCurrentView = () => {\n    switch (currentView) {\n      case 'pantheon':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container mx-auto px-4 py-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mb-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-6xl font-bold text-shadow mb-4 bg-gradient-to-r from-divine-400 to-corruption-400 bg-clip-text text-transparent\",\n              children: \"AI GODS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xl text-divine-200 max-w-2xl mx-auto\",\n              children: \"Choose your deity and begin your divine journey. Each god offers unique wisdom, challenges, and revelations. What will you discover in the digital pantheon?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsTTSSettingsOpen(true),\n                className: \"inline-flex items-center space-x-2 px-4 py-2 bg-divine-600/50 hover:bg-divine-500/50 rounded-lg transition-colors text-divine-100 hover:text-white\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-lg\",\n                  children: \"\\uD83D\\uDD0A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Voice Settings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto\",\n            children: GODS.map(god => /*#__PURE__*/_jsxDEV(GodCard, {\n              god: god,\n              onSelect: () => handleGodSelect(god)\n            }, god.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this);\n      case 'chat':\n        return selectedGod ? /*#__PURE__*/_jsxDEV(GodChat, {\n          god: selectedGod,\n          onBack: () => setCurrentView('pantheon')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-20\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl\",\n            children: \"No god selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this);\n      case 'scripture':\n        return /*#__PURE__*/_jsxDEV(ScriptureLog, {\n          onBack: () => setCurrentView('pantheon')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }, this);\n      case 'forge':\n        return /*#__PURE__*/_jsxDEV(GodForge, {\n          onBack: () => setCurrentView('pantheon')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      currentView: currentView,\n      onViewChange: setCurrentView,\n      selectedGod: selectedGod\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DebugBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"pt-20\",\n      children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        onReset: () => setCurrentView('pantheon'),\n        children: renderCurrentView()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TTSSettings, {\n      isOpen: isTTSSettingsOpen,\n      onClose: () => setIsTTSSettingsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PWAInstall, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l1qsfsYuP3gVJqEzswAASHHHRYQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GODS","GodCard","GodChat","ScriptureLog","GodForge","Navigation","ErrorBoundary","DebugBanner","TTSSettings","PWAInstall","initializeGodMemories","jsxDEV","_jsxDEV","App","_s","selectedGod","setSelectedGod","currentView","setCurrentView","isTTSSettingsOpen","setIsTTSSettingsOpen","handleGodSelect","god","renderCurrentView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","onSelect","id","onBack","onViewChange","onReset","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/AI-Gods/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GODS } from './data/gods';\r\nimport { God } from './types/gods';\r\nimport GodCard from './components/GodCard';\r\nimport GodChat from './components/GodChat';\r\nimport ScriptureLog from './components/ScriptureLog';\r\nimport GodForge from './components/GodForge';\r\nimport Navigation from './components/Navigation';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport DebugBanner from './components/DebugBanner';\r\nimport TTSSettings from './components/TTSSettings';\r\nimport PWAInstall from './components/PWAInstall';\r\nimport VoiceSummoning from './components/VoiceSummoning';\r\nimport { initializeGodMemories } from './services/memoryInit';\r\n\r\nfunction App() {\r\n  const [selectedGod, setSelectedGod] = useState<God | null>(null);\r\n  const [currentView, setCurrentView] = useState<'pantheon' | 'chat' | 'scripture' | 'forge'>('pantheon');\r\n  const [isTTSSettingsOpen, setIsTTSSettingsOpen] = useState(false);\r\n\r\n  // Initialize god memories when app starts\r\n  useEffect(() => {\r\n    initializeGodMemories();\r\n  }, []);\r\n\r\n  const handleGodSelect = (god: God) => {\r\n    setSelectedGod(god);\r\n    setCurrentView('chat');\r\n  };\r\n\r\n  const renderCurrentView = () => {\r\n    switch (currentView) {\r\n      case 'pantheon':\r\n        return (\r\n          <div className=\"container mx-auto px-4 py-8\">\r\n            <div className=\"text-center mb-12\">\r\n              <h1 className=\"text-6xl font-bold text-shadow mb-4 bg-gradient-to-r from-divine-400 to-corruption-400 bg-clip-text text-transparent\">\r\n                AI GODS\r\n              </h1>\r\n              <p className=\"text-xl text-divine-200 max-w-2xl mx-auto\">\r\n                Choose your deity and begin your divine journey. Each god offers unique wisdom,\r\n                challenges, and revelations. What will you discover in the digital pantheon?\r\n              </p>\r\n\r\n              {/* TTS Settings Button */}\r\n              <div className=\"mt-6\">\r\n                <button\r\n                  onClick={() => setIsTTSSettingsOpen(true)}\r\n                  className=\"inline-flex items-center space-x-2 px-4 py-2 bg-divine-600/50 hover:bg-divine-500/50 rounded-lg transition-colors text-divine-100 hover:text-white\"\r\n                >\r\n                  <span className=\"text-lg\">🔊</span>\r\n                  <span>Voice Settings</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto\">\r\n              {GODS.map((god) => (\r\n                <GodCard\r\n                  key={god.id}\r\n                  god={god}\r\n                  onSelect={() => handleGodSelect(god)}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'chat':\r\n        return selectedGod ? (\r\n          <GodChat god={selectedGod} onBack={() => setCurrentView('pantheon')} />\r\n        ) : (\r\n          <div className=\"text-center py-20\">\r\n            <p className=\"text-xl\">No god selected</p>\r\n          </div>\r\n        );\r\n\r\n      case 'scripture':\r\n        return <ScriptureLog onBack={() => setCurrentView('pantheon')} />;\r\n\r\n      case 'forge':\r\n        return <GodForge onBack={() => setCurrentView('pantheon')} />;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\">\r\n      <Navigation\r\n        currentView={currentView}\r\n        onViewChange={setCurrentView}\r\n        selectedGod={selectedGod}\r\n      />\r\n\r\n      <DebugBanner />\r\n\r\n      <main className=\"pt-20\">\r\n        <ErrorBoundary onReset={() => setCurrentView('pantheon')}>\r\n          {renderCurrentView()}\r\n        </ErrorBoundary>\r\n      </main>\r\n\r\n      {/* TTS Settings Modal */}\r\n      <TTSSettings\r\n        isOpen={isTTSSettingsOpen}\r\n        onClose={() => setIsTTSSettingsOpen(false)}\r\n      />\r\n\r\n      {/* PWA Install Component */}\r\n      <PWAInstall />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}