{"ast":null,"code":"// Coqui TTS service for offline, unlimited text-to-speech\n// This service provides custom voices for each god without API keys or limits\nclass CoquiTTSService{constructor(){this.isSupported=false;this.voices=[];this.audioContext=null;this.currentAudio=null;this.initializeVoices();this.checkSupport();}initializeVoices(){// Pre-defined voices for each god personality\nthis.voices=[// Elion - God of Wisdom (Orderly)\n{id:'elion-voice',name:'Elion the Wise',language:'en',gender:'male',description:'Deep, authoritative voice with measured cadence',sampleRate:22050},// Nyxa - Goddess of Dreams (Mystical)\n{id:'nyxa-voice',name:'Nyxa the Mysterious',language:'en',gender:'female',description:'Ethereal, whispery voice with mystical undertones',sampleRate:22050},// Zara - Goddess of Light (Radiant)\n{id:'zara-voice',name:'Zara the Radiant',language:'en',gender:'female',description:'Warm, bright voice with uplifting energy',sampleRate:22050},// Malakai - God of Corruption (Corrupt)\n{id:'malakai-voice',name:'Malakai the Corrupt',language:'en',gender:'male',description:'Dark, seductive voice with dangerous allure',sampleRate:22050},// Glitch - Digital Entity (Glitched)\n{id:'glitch-voice',name:'Glitch the Digital',language:'en',gender:'neutral',description:'Digital, glitchy voice with electronic effects',sampleRate:22050}];}checkSupport(){// Check if Web Audio API is supported\nthis.isSupported=!!(window.AudioContext||window.webkitAudioContext);console.log('üîç Coqui TTS: Web Audio API check:',{hasAudioContext:!!window.AudioContext,hasWebkitAudioContext:!!window.webkitAudioContext,isSupported:this.isSupported});if(this.isSupported){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext)();console.log('üéµ Coqui TTS: Web Audio API initialized successfully');console.log('üéµ Audio Context state:',this.audioContext.state);// Browser security: AudioContext starts in 'suspended' state\n// We need user interaction to unlock it\nif(this.audioContext.state==='suspended'){console.log('üîí AudioContext is suspended - waiting for user interaction to unlock');}}catch(error){console.error('‚ùå Coqui TTS: Failed to create AudioContext:',error);this.isSupported=false;}}else{console.warn('‚ö†Ô∏è Coqui TTS: Web Audio API not supported, falling back to Web Speech API');}}// Get available voices\ngetVoices(){return[...this.voices];}// Get voice by ID\ngetVoice(voiceId){return this.voices.find(voice=>voice.id===voiceId);}// Get voice by god temperament\ngetVoiceByTemperament(temperament){const voiceMap={'Orderly':'elion-voice','Mystical':'nyxa-voice','Radiant':'zara-voice','Corrupt':'malakai-voice','Glitched':'glitch-voice'};const voiceId=voiceMap[temperament]||'elion-voice';return this.getVoice(voiceId)||this.voices[0];}// Check if service is supported\nisServiceSupported(){return this.isSupported;}// Generate speech using Coqui TTS (simulated for now)\nasync speak(text,options){console.log(\"\\uD83C\\uDFB5 Coqui TTS: speak() called with:\",{text:text.substring(0,50),options});console.log(\"\\uD83C\\uDFB5 Coqui TTS: isSupported = \".concat(this.isSupported,\", audioContext = \").concat(!!this.audioContext));if(!this.isSupported){throw new Error('Coqui TTS not supported in this browser');}if(!this.audioContext){throw new Error('AudioContext not initialized');}try{console.log(\"\\uD83C\\uDFB5 Coqui TTS: Speaking \\\"\".concat(text.substring(0,50),\"...\\\" with voice \").concat(options.voice));console.log(\"\\uD83C\\uDFB5 Audio Context state: \".concat(this.audioContext.state));// Unlock audio context if suspended\nif(this.audioContext.state==='suspended'){console.log(\"\\uD83D\\uDD13 Unlocking audio before speaking...\");await this.unlockAudio();}// Simulate processing time\nconsole.log(\"\\uD83C\\uDFB5 Simulating processing time...\");await new Promise(resolve=>setTimeout(resolve,1000));// Generate clean, pleasant audio\nconsole.log(\"\\uD83C\\uDFB5 Generating clean audio...\");await this.generateCleanAudio(text,options);console.log('‚úÖ Coqui TTS: Speech completed');}catch(error){console.error('‚ùå Coqui TTS Error:',error);throw error;}}// Generate clean, pleasant audio\nasync generateCleanAudio(text,options){console.log(\"\\uD83C\\uDFB5 generateCleanAudio called with:\",{text:text.substring(0,50),options});if(!this.audioContext){console.error('‚ùå No AudioContext available');return;}try{const voice=this.getVoice(options.voice);console.log(\"\\uD83C\\uDFB5 Voice found:\",voice);if(!voice){console.error('‚ùå No voice found for options:',options);return;}// Generate different tones for different voices\nconst frequency=this.getVoiceFrequency(voice);const duration=Math.min(text.length*0.1,3);// Max 3 seconds\nconsole.log(\"\\uD83C\\uDFB5 Audio params: frequency=\".concat(frequency,\"Hz, duration=\").concat(duration,\"s\"));// Create a single, clean oscillator for each voice\nconst oscillator=this.audioContext.createOscillator();const gainNode=this.audioContext.createGain();// Connect audio nodes\noscillator.connect(gainNode);gainNode.connect(this.audioContext.destination);// Configure oscillator based on voice type\noscillator.frequency.setValueAtTime(frequency,this.audioContext.currentTime);// Set wave type based on voice personality\nswitch(voice.id){case'elion-voice':oscillator.type='sine';// Clean, pure wisdom\nbreak;case'nyxa-voice':oscillator.type='triangle';// Soft, ethereal\nbreak;case'zara-voice':oscillator.type='sine';// Bright, clear\nbreak;case'malakai-voice':oscillator.type='sawtooth';// Dark, edgy\nbreak;case'glitch-voice':oscillator.type='square';// Digital, harsh\nbreak;default:oscillator.type='sine';}// Apply simple, pleasant voice effects\nthis.applySimpleVoiceEffects(gainNode,voice,duration);console.log(\"\\uD83C\\uDFB5 Simple voice effects applied\");// Play the audio\nconst startTime=this.audioContext.currentTime;oscillator.start(startTime);oscillator.stop(startTime+duration);// Store reference for stopping\nthis.currentAudio=oscillator;console.log(\"\\uD83C\\uDFB5 Clean audio scheduled: start=\".concat(startTime,\"s, stop=\").concat(startTime+duration,\"s\"));}catch(error){console.error('Error generating clean audio:',error);}}// Get frequency based on voice characteristics\ngetVoiceFrequency(voice){const baseFrequencies={'elion-voice':120,// Deep, authoritative\n'nyxa-voice':220,// Ethereal, mysterious\n'zara-voice':180,// Warm, bright\n'malakai-voice':140,// Dark, seductive\n'glitch-voice':100// Digital, glitchy\n};return baseFrequencies[voice.id]||150;}// Apply simple, pleasant voice effects\napplySimpleVoiceEffects(gainNode,voice,duration){const now=this.audioContext.currentTime;// Apply different effects based on voice\nswitch(voice.id){case'elion-voice':// Orderly: steady, measured, authoritative\ngainNode.gain.setValueAtTime(0.3,now);gainNode.gain.linearRampToValueAtTime(0.3,now+0.1);break;case'nyxa-voice':// Mystical: ethereal, whispery, mysterious\ngainNode.gain.setValueAtTime(0.25,now);gainNode.gain.exponentialRampToValueAtTime(0.15,now+duration*0.3);break;case'zara-voice':// Radiant: warm, bright, uplifting\ngainNode.gain.setValueAtTime(0.35,now);gainNode.gain.linearRampToValueAtTime(0.35,now+0.2);break;case'malakai-voice':// Corrupt: dark, seductive, dangerous\ngainNode.gain.setValueAtTime(0.3,now);gainNode.gain.linearRampToValueAtTime(0.4,now+0.3);break;case'glitch-voice':// Glitched: digital, chaotic, corrupted\ngainNode.gain.setValueAtTime(0.25,now);// Add subtle glitch effect\nthis.addSubtleGlitch(gainNode,duration);break;}}// Add subtle glitch effect for digital voices\naddSubtleGlitch(gainNode,duration){const startTime=this.audioContext.currentTime;const steps=8;for(let i=0;i<steps;i++){const time=startTime+i/steps*duration;const glitchGain=0.25+(Math.random()-0.5)*0.1;gainNode.gain.setValueAtTime(glitchGain,time);}}// Stop current speech\nstop(){if(this.currentAudio){try{this.currentAudio.stop();}catch(error){// Oscillator might already be stopped\nconsole.log('Oscillator already stopped');}this.currentAudio=null;}if(this.audioContext&&this.audioContext.state==='running'){this.audioContext.suspend();}}// Pause speech\npause(){if(this.audioContext&&this.audioContext.state==='running'){this.audioContext.suspend();}}// Resume speech\nresume(){if(this.audioContext&&this.audioContext.state==='suspended'){this.audioContext.resume();}}// Get service status\ngetStatus(){return{supported:this.isSupported,voices:this.voices.length,ready:this.isSupported&&!!this.audioContext};}// Unlock audio context (required for browser security)\nasync unlockAudio(){if(!this.audioContext){console.error('‚ùå No AudioContext to unlock');return false;}try{if(this.audioContext.state==='suspended'){console.log('üîì Unlocking AudioContext...');await this.audioContext.resume();console.log('‚úÖ AudioContext unlocked! State:',this.audioContext.state);return true;}else{console.log('‚úÖ AudioContext already unlocked. State:',this.audioContext.state);return true;}}catch(error){console.error('‚ùå Failed to unlock AudioContext:',error);return false;}}// Test method to verify audio is working\nasync testAudio(){console.log('üß™ Coqui TTS: Testing audio...');console.log('üß™ Service status:',this.getStatus());if(!this.isSupported){console.error('üß™ Test failed: Service not supported');return;}// First unlock audio if needed\nawait this.unlockAudio();try{// Test with a simple beep\nconst oscillator=this.audioContext.createOscillator();const gainNode=this.audioContext.createGain();oscillator.connect(gainNode);gainNode.connect(this.audioContext.destination);oscillator.frequency.setValueAtTime(440,this.audioContext.currentTime);// A4 note\noscillator.type='sine';gainNode.gain.setValueAtTime(0.1,this.audioContext.currentTime);oscillator.start(this.audioContext.currentTime);oscillator.stop(this.audioContext.currentTime+0.5);console.log('üß™ Test audio played successfully!');}catch(error){console.error('üß™ Test failed:',error);}}// Cleanup resources\ndestroy(){this.stop();if(this.audioContext){this.audioContext.close();this.audioContext=null;}}}export default new CoquiTTSService();","map":{"version":3,"names":["CoquiTTSService","constructor","isSupported","voices","audioContext","currentAudio","initializeVoices","checkSupport","id","name","language","gender","description","sampleRate","window","AudioContext","webkitAudioContext","console","log","hasAudioContext","hasWebkitAudioContext","state","error","warn","getVoices","getVoice","voiceId","find","voice","getVoiceByTemperament","temperament","voiceMap","isServiceSupported","speak","text","options","substring","concat","Error","unlockAudio","Promise","resolve","setTimeout","generateCleanAudio","frequency","getVoiceFrequency","duration","Math","min","length","oscillator","createOscillator","gainNode","createGain","connect","destination","setValueAtTime","currentTime","type","applySimpleVoiceEffects","startTime","start","stop","baseFrequencies","now","gain","linearRampToValueAtTime","exponentialRampToValueAtTime","addSubtleGlitch","steps","i","time","glitchGain","random","suspend","pause","resume","getStatus","supported","ready","testAudio","destroy","close"],"sources":["D:/AI-Gods/src/services/coquiTTS.ts"],"sourcesContent":["// Coqui TTS service for offline, unlimited text-to-speech\r\n// This service provides custom voices for each god without API keys or limits\r\n\r\nexport interface CoquiVoice {\r\n    id: string;\r\n    name: string;\r\n    language: string;\r\n    gender: 'male' | 'female' | 'neutral';\r\n    description: string;\r\n    sampleRate: number;\r\n}\r\n\r\nexport interface TTSOptions {\r\n    voice: string;\r\n    speed?: number;\r\n    pitch?: number;\r\n    volume?: number;\r\n}\r\n\r\nclass CoquiTTSService {\r\n    private isSupported = false;\r\n    private voices: CoquiVoice[] = [];\r\n    private audioContext: AudioContext | null = null;\r\n    private currentAudio: OscillatorNode | null = null;\r\n\r\n    constructor() {\r\n        this.initializeVoices();\r\n        this.checkSupport();\r\n    }\r\n\r\n    private initializeVoices() {\r\n        // Pre-defined voices for each god personality\r\n        this.voices = [\r\n            // Elion - God of Wisdom (Orderly)\r\n            {\r\n                id: 'elion-voice',\r\n                name: 'Elion the Wise',\r\n                language: 'en',\r\n                gender: 'male',\r\n                description: 'Deep, authoritative voice with measured cadence',\r\n                sampleRate: 22050\r\n            },\r\n            // Nyxa - Goddess of Dreams (Mystical)\r\n            {\r\n                id: 'nyxa-voice',\r\n                name: 'Nyxa the Mysterious',\r\n                language: 'en',\r\n                gender: 'female',\r\n                description: 'Ethereal, whispery voice with mystical undertones',\r\n                sampleRate: 22050\r\n            },\r\n            // Zara - Goddess of Light (Radiant)\r\n            {\r\n                id: 'zara-voice',\r\n                name: 'Zara the Radiant',\r\n                language: 'en',\r\n                gender: 'female',\r\n                description: 'Warm, bright voice with uplifting energy',\r\n                sampleRate: 22050\r\n            },\r\n            // Malakai - God of Corruption (Corrupt)\r\n            {\r\n                id: 'malakai-voice',\r\n                name: 'Malakai the Corrupt',\r\n                language: 'en',\r\n                gender: 'male',\r\n                description: 'Dark, seductive voice with dangerous allure',\r\n                sampleRate: 22050\r\n            },\r\n            // Glitch - Digital Entity (Glitched)\r\n            {\r\n                id: 'glitch-voice',\r\n                name: 'Glitch the Digital',\r\n                language: 'en',\r\n                gender: 'neutral',\r\n                description: 'Digital, glitchy voice with electronic effects',\r\n                sampleRate: 22050\r\n            }\r\n        ];\r\n    }\r\n\r\n    private checkSupport() {\r\n        // Check if Web Audio API is supported\r\n        this.isSupported = !!(window.AudioContext || (window as any).webkitAudioContext);\r\n        console.log('üîç Coqui TTS: Web Audio API check:', {\r\n            hasAudioContext: !!window.AudioContext,\r\n            hasWebkitAudioContext: !!(window as any).webkitAudioContext,\r\n            isSupported: this.isSupported\r\n        });\r\n\r\n        if (this.isSupported) {\r\n            try {\r\n                this.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\r\n                console.log('üéµ Coqui TTS: Web Audio API initialized successfully');\r\n                console.log('üéµ Audio Context state:', this.audioContext.state);\r\n                \r\n                // Browser security: AudioContext starts in 'suspended' state\r\n                // We need user interaction to unlock it\r\n                if (this.audioContext.state === 'suspended') {\r\n                    console.log('üîí AudioContext is suspended - waiting for user interaction to unlock');\r\n                }\r\n            } catch (error) {\r\n                console.error('‚ùå Coqui TTS: Failed to create AudioContext:', error);\r\n                this.isSupported = false;\r\n            }\r\n        } else {\r\n            console.warn('‚ö†Ô∏è Coqui TTS: Web Audio API not supported, falling back to Web Speech API');\r\n        }\r\n    }\r\n\r\n    // Get available voices\r\n    public getVoices(): CoquiVoice[] {\r\n        return [...this.voices];\r\n    }\r\n\r\n    // Get voice by ID\r\n    public getVoice(voiceId: string): CoquiVoice | undefined {\r\n        return this.voices.find(voice => voice.id === voiceId);\r\n    }\r\n\r\n    // Get voice by god temperament\r\n    public getVoiceByTemperament(temperament: string): CoquiVoice {\r\n        const voiceMap: { [key: string]: string } = {\r\n            'Orderly': 'elion-voice',\r\n            'Mystical': 'nyxa-voice',\r\n            'Radiant': 'zara-voice',\r\n            'Corrupt': 'malakai-voice',\r\n            'Glitched': 'glitch-voice'\r\n        };\r\n\r\n        const voiceId = voiceMap[temperament] || 'elion-voice';\r\n        return this.getVoice(voiceId) || this.voices[0];\r\n    }\r\n\r\n    // Check if service is supported\r\n    public isServiceSupported(): boolean {\r\n        return this.isSupported;\r\n    }\r\n\r\n    // Generate speech using Coqui TTS (simulated for now)\r\n    public async speak(text: string, options: TTSOptions): Promise<void> {\r\n        console.log(`üéµ Coqui TTS: speak() called with:`, { text: text.substring(0, 50), options });\r\n        console.log(`üéµ Coqui TTS: isSupported = ${this.isSupported}, audioContext = ${!!this.audioContext}`);\r\n\r\n        if (!this.isSupported) {\r\n            throw new Error('Coqui TTS not supported in this browser');\r\n        }\r\n\r\n        if (!this.audioContext) {\r\n            throw new Error('AudioContext not initialized');\r\n        }\r\n\r\n        try {\r\n            console.log(`üéµ Coqui TTS: Speaking \"${text.substring(0, 50)}...\" with voice ${options.voice}`);\r\n            console.log(`üéµ Audio Context state: ${this.audioContext.state}`);\r\n\r\n            // Unlock audio context if suspended\r\n            if (this.audioContext.state === 'suspended') {\r\n                console.log(`üîì Unlocking audio before speaking...`);\r\n                await this.unlockAudio();\r\n            }\r\n\r\n            // Simulate processing time\r\n            console.log(`üéµ Simulating processing time...`);\r\n            await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n            // Generate clean, pleasant audio\r\n            console.log(`üéµ Generating clean audio...`);\r\n            await this.generateCleanAudio(text, options);\r\n\r\n            console.log('‚úÖ Coqui TTS: Speech completed');\r\n        } catch (error) {\r\n            console.error('‚ùå Coqui TTS Error:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // Generate clean, pleasant audio\r\n    private async generateCleanAudio(text: string, options: TTSOptions): Promise<void> {\r\n        console.log(`üéµ generateCleanAudio called with:`, { text: text.substring(0, 50), options });\r\n\r\n        if (!this.audioContext) {\r\n            console.error('‚ùå No AudioContext available');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const voice = this.getVoice(options.voice);\r\n            console.log(`üéµ Voice found:`, voice);\r\n\r\n            if (!voice) {\r\n                console.error('‚ùå No voice found for options:', options);\r\n                return;\r\n            }\r\n\r\n            // Generate different tones for different voices\r\n            const frequency = this.getVoiceFrequency(voice);\r\n            const duration = Math.min(text.length * 0.1, 3); // Max 3 seconds\r\n            console.log(`üéµ Audio params: frequency=${frequency}Hz, duration=${duration}s`);\r\n\r\n            // Create a single, clean oscillator for each voice\r\n            const oscillator = this.audioContext.createOscillator();\r\n            const gainNode = this.audioContext.createGain();\r\n\r\n            // Connect audio nodes\r\n            oscillator.connect(gainNode);\r\n            gainNode.connect(this.audioContext.destination);\r\n\r\n            // Configure oscillator based on voice type\r\n            oscillator.frequency.setValueAtTime(frequency, this.audioContext.currentTime);\r\n            \r\n            // Set wave type based on voice personality\r\n            switch (voice.id) {\r\n                case 'elion-voice':\r\n                    oscillator.type = 'sine'; // Clean, pure wisdom\r\n                    break;\r\n                case 'nyxa-voice':\r\n                    oscillator.type = 'triangle'; // Soft, ethereal\r\n                    break;\r\n                case 'zara-voice':\r\n                    oscillator.type = 'sine'; // Bright, clear\r\n                    break;\r\n                case 'malakai-voice':\r\n                    oscillator.type = 'sawtooth'; // Dark, edgy\r\n                    break;\r\n                case 'glitch-voice':\r\n                    oscillator.type = 'square'; // Digital, harsh\r\n                    break;\r\n                default:\r\n                    oscillator.type = 'sine';\r\n            }\r\n\r\n            // Apply simple, pleasant voice effects\r\n            this.applySimpleVoiceEffects(gainNode, voice, duration);\r\n            console.log(`üéµ Simple voice effects applied`);\r\n\r\n            // Play the audio\r\n            const startTime = this.audioContext.currentTime;\r\n            oscillator.start(startTime);\r\n            oscillator.stop(startTime + duration);\r\n\r\n            // Store reference for stopping\r\n            this.currentAudio = oscillator;\r\n            console.log(`üéµ Clean audio scheduled: start=${startTime}s, stop=${startTime + duration}s`);\r\n\r\n        } catch (error) {\r\n            console.error('Error generating clean audio:', error);\r\n        }\r\n    }\r\n\r\n    // Get frequency based on voice characteristics\r\n    private getVoiceFrequency(voice: CoquiVoice): number {\r\n        const baseFrequencies: { [key: string]: number } = {\r\n            'elion-voice': 120,    // Deep, authoritative\r\n            'nyxa-voice': 220,     // Ethereal, mysterious\r\n            'zara-voice': 180,     // Warm, bright\r\n            'malakai-voice': 140,  // Dark, seductive\r\n            'glitch-voice': 100    // Digital, glitchy\r\n        };\r\n\r\n        return baseFrequencies[voice.id] || 150;\r\n    }\r\n\r\n    // Apply simple, pleasant voice effects\r\n    private applySimpleVoiceEffects(\r\n        gainNode: GainNode,\r\n        voice: CoquiVoice,\r\n        duration: number\r\n    ) {\r\n        const now = this.audioContext!.currentTime;\r\n\r\n        // Apply different effects based on voice\r\n        switch (voice.id) {\r\n            case 'elion-voice':\r\n                // Orderly: steady, measured, authoritative\r\n                gainNode.gain.setValueAtTime(0.3, now);\r\n                gainNode.gain.linearRampToValueAtTime(0.3, now + 0.1);\r\n                break;\r\n\r\n            case 'nyxa-voice':\r\n                // Mystical: ethereal, whispery, mysterious\r\n                gainNode.gain.setValueAtTime(0.25, now);\r\n                gainNode.gain.exponentialRampToValueAtTime(0.15, now + duration * 0.3);\r\n                break;\r\n\r\n            case 'zara-voice':\r\n                // Radiant: warm, bright, uplifting\r\n                gainNode.gain.setValueAtTime(0.35, now);\r\n                gainNode.gain.linearRampToValueAtTime(0.35, now + 0.2);\r\n                break;\r\n\r\n            case 'malakai-voice':\r\n                // Corrupt: dark, seductive, dangerous\r\n                gainNode.gain.setValueAtTime(0.3, now);\r\n                gainNode.gain.linearRampToValueAtTime(0.4, now + 0.3);\r\n                break;\r\n\r\n            case 'glitch-voice':\r\n                // Glitched: digital, chaotic, corrupted\r\n                gainNode.gain.setValueAtTime(0.25, now);\r\n                // Add subtle glitch effect\r\n                this.addSubtleGlitch(gainNode, duration);\r\n                break;\r\n        }\r\n    }\r\n\r\n    // Add subtle glitch effect for digital voices\r\n    private addSubtleGlitch(gainNode: GainNode, duration: number) {\r\n        const startTime = this.audioContext!.currentTime;\r\n        const steps = 8;\r\n        \r\n        for (let i = 0; i < steps; i++) {\r\n            const time = startTime + (i / steps) * duration;\r\n            const glitchGain = 0.25 + (Math.random() - 0.5) * 0.1;\r\n            gainNode.gain.setValueAtTime(glitchGain, time);\r\n        }\r\n    }\r\n\r\n    // Stop current speech\r\n    public stop(): void {\r\n        if (this.currentAudio) {\r\n            try {\r\n                this.currentAudio.stop();\r\n            } catch (error) {\r\n                // Oscillator might already be stopped\r\n                console.log('Oscillator already stopped');\r\n            }\r\n            this.currentAudio = null;\r\n        }\r\n\r\n        if (this.audioContext && this.audioContext.state === 'running') {\r\n            this.audioContext.suspend();\r\n        }\r\n    }\r\n\r\n    // Pause speech\r\n    public pause(): void {\r\n        if (this.audioContext && this.audioContext.state === 'running') {\r\n            this.audioContext.suspend();\r\n        }\r\n    }\r\n\r\n    // Resume speech\r\n    public resume(): void {\r\n        if (this.audioContext && this.audioContext.state === 'suspended') {\r\n            this.audioContext.resume();\r\n        }\r\n    }\r\n\r\n    // Get service status\r\n    public getStatus(): { supported: boolean; voices: number; ready: boolean } {\r\n        return {\r\n            supported: this.isSupported,\r\n            voices: this.voices.length,\r\n            ready: this.isSupported && !!this.audioContext\r\n        };\r\n    }\r\n\r\n    // Unlock audio context (required for browser security)\r\n    public async unlockAudio(): Promise<boolean> {\r\n        if (!this.audioContext) {\r\n            console.error('‚ùå No AudioContext to unlock');\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            if (this.audioContext.state === 'suspended') {\r\n                console.log('üîì Unlocking AudioContext...');\r\n                await this.audioContext.resume();\r\n                console.log('‚úÖ AudioContext unlocked! State:', this.audioContext.state);\r\n                return true;\r\n            } else {\r\n                console.log('‚úÖ AudioContext already unlocked. State:', this.audioContext.state);\r\n                return true;\r\n            }\r\n        } catch (error) {\r\n            console.error('‚ùå Failed to unlock AudioContext:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Test method to verify audio is working\r\n    public async testAudio(): Promise<void> {\r\n        console.log('üß™ Coqui TTS: Testing audio...');\r\n        console.log('üß™ Service status:', this.getStatus());\r\n        \r\n        if (!this.isSupported) {\r\n            console.error('üß™ Test failed: Service not supported');\r\n            return;\r\n        }\r\n        \r\n        // First unlock audio if needed\r\n        await this.unlockAudio();\r\n        \r\n        try {\r\n            // Test with a simple beep\r\n            const oscillator = this.audioContext!.createOscillator();\r\n            const gainNode = this.audioContext!.createGain();\r\n            \r\n            oscillator.connect(gainNode);\r\n            gainNode.connect(this.audioContext!.destination);\r\n            \r\n            oscillator.frequency.setValueAtTime(440, this.audioContext!.currentTime); // A4 note\r\n            oscillator.type = 'sine';\r\n            \r\n            gainNode.gain.setValueAtTime(0.1, this.audioContext!.currentTime);\r\n            \r\n            oscillator.start(this.audioContext!.currentTime);\r\n            oscillator.stop(this.audioContext!.currentTime + 0.5);\r\n            \r\n            console.log('üß™ Test audio played successfully!');\r\n        } catch (error) {\r\n            console.error('üß™ Test failed:', error);\r\n        }\r\n    }\r\n\r\n    // Cleanup resources\r\n    public destroy(): void {\r\n        this.stop();\r\n        if (this.audioContext) {\r\n            this.audioContext.close();\r\n            this.audioContext = null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new CoquiTTSService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}