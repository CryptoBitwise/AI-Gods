{"ast":null,"code":"// Type definitions for Speech Recognition API\n\nclass VoiceRecognitionService {\n  constructor() {\n    this.recognition = null;\n    this.isListening = false;\n    this.isPushToTalkActive = false;\n    this.settings = void 0;\n    this.callbacks = new Map();\n    this.keyDownListener = null;\n    this.keyUpListener = null;\n    this.pushToTalkKey = ' ';\n    // Spacebar\n    // Predefined voice commands for gods and rituals\n    this.commands = [\n    // God summoning commands\n    {\n      id: 'summon-aethon',\n      trigger: ['summon aethon', 'call aethon', 'invoke aethon', 'aethon appear'],\n      godId: 'aethon',\n      action: 'summon',\n      confidence: 0.7\n    }, {\n      id: 'summon-nyxara',\n      trigger: ['summon nyxara', 'call nyxara', 'invoke nyxara', 'nyxara appear'],\n      godId: 'nyxara',\n      action: 'summon',\n      confidence: 0.7\n    }, {\n      id: 'summon-zephyros',\n      trigger: ['summon zephyros', 'call zephyros', 'invoke zephyros', 'zephyros appear'],\n      godId: 'zephyros',\n      action: 'summon',\n      confidence: 0.7\n    }, {\n      id: 'summon-korvain',\n      trigger: ['summon korvain', 'call korvain', 'invoke korvain', 'korvain appear'],\n      godId: 'korvain',\n      action: 'summon',\n      confidence: 0.7\n    }, {\n      id: 'summon-xerion',\n      trigger: ['summon xerion', 'call xerion', 'invoke xerion', 'xerion appear'],\n      godId: 'xerion',\n      action: 'summon',\n      confidence: 0.7\n    },\n    // Ritual commands\n    {\n      id: 'start-ritual',\n      trigger: ['start ritual', 'begin ritual', 'perform ritual', 'initiate ceremony'],\n      action: 'ritual',\n      confidence: 0.8\n    }, {\n      id: 'make-offering',\n      trigger: ['make offering', 'present offering', 'give offering', 'offer tribute'],\n      action: 'offering',\n      confidence: 0.8\n    },\n    // Council commands\n    {\n      id: 'convene-council',\n      trigger: ['convene council', 'start council', 'begin council', 'gather pantheon'],\n      action: 'council',\n      confidence: 0.8\n    },\n    // Question commands\n    {\n      id: 'ask-question',\n      trigger: ['i have a question', 'answer me', 'tell me', 'explain'],\n      action: 'question',\n      confidence: 0.6\n    },\n    // Dismissal commands\n    {\n      id: 'dismiss-god',\n      trigger: ['dismiss', 'go away', 'leave me', 'farewell', 'until next time'],\n      action: 'dismiss',\n      confidence: 0.7\n    }];\n    this.settings = {\n      language: 'en-US',\n      continuous: false,\n      interimResults: true,\n      maxAlternatives: 3,\n      threshold: 0.6\n    };\n    this.initializeRecognition();\n    this.setupPushToTalk();\n  }\n  initializeRecognition() {\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      console.error('‚ùå Speech recognition not supported in this browser');\n      return;\n    }\n\n    // @ts-ignore\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    this.recognition = new SpeechRecognition();\n    if (!this.recognition) return;\n    this.recognition.continuous = this.settings.continuous;\n    this.recognition.interimResults = this.settings.interimResults;\n    this.recognition.lang = this.settings.language;\n    this.recognition.maxAlternatives = this.settings.maxAlternatives;\n    this.recognition.onstart = () => {\n      console.log('üé§ Voice recognition started');\n      this.isListening = true;\n      this.emit('start');\n    };\n    this.recognition.onend = () => {\n      console.log('üé§ Voice recognition ended');\n      this.isListening = false;\n      this.emit('end');\n    };\n    this.recognition.onerror = event => {\n      console.error('‚ùå Voice recognition error:', event.error);\n      this.emit('error', event.error);\n    };\n    this.recognition.onresult = event => {\n      this.handleRecognitionResult(event);\n    };\n  }\n  setupPushToTalk() {\n    this.keyDownListener = e => {\n      if (e.code === 'Space' && !this.isPushToTalkActive && !this.isInputFocused()) {\n        e.preventDefault();\n        this.startPushToTalk();\n      }\n    };\n    this.keyUpListener = e => {\n      if (e.code === 'Space' && this.isPushToTalkActive) {\n        e.preventDefault();\n        this.stopPushToTalk();\n      }\n    };\n    document.addEventListener('keydown', this.keyDownListener);\n    document.addEventListener('keyup', this.keyUpListener);\n  }\n  isInputFocused() {\n    const activeElement = document.activeElement;\n    return activeElement instanceof HTMLInputElement || activeElement instanceof HTMLTextAreaElement || (activeElement === null || activeElement === void 0 ? void 0 : activeElement.getAttribute('contenteditable')) === 'true';\n  }\n  handleRecognitionResult(event) {\n    let finalTranscript = '';\n    let interimTranscript = '';\n    for (let i = event.resultIndex; i < event.results.length; i++) {\n      const result = event.results[i];\n      const transcript = result[0].transcript;\n      const confidence = result[0].confidence;\n      if (result.isFinal) {\n        finalTranscript += transcript;\n\n        // Process the final result\n        const recognitionResult = {\n          transcript: finalTranscript.trim(),\n          confidence,\n          timestamp: new Date()\n        };\n\n        // Try to match voice commands\n        const command = this.parseCommand(recognitionResult.transcript);\n        if (command) {\n          recognitionResult.command = command;\n        }\n        console.log('üé§ Voice recognized:', recognitionResult);\n        this.emit('result', recognitionResult);\n      } else {\n        interimTranscript += transcript;\n        this.emit('interim', {\n          transcript: interimTranscript,\n          confidence\n        });\n      }\n    }\n  }\n  parseCommand(transcript) {\n    const lowerTranscript = transcript.toLowerCase().trim();\n\n    // Find the best matching command\n    let bestMatch = null;\n    let bestScore = 0;\n    for (const command of this.commands) {\n      for (const trigger of command.trigger) {\n        const score = this.calculateSimilarity(lowerTranscript, trigger);\n        if (score > bestScore && score >= command.confidence) {\n          bestMatch = {\n            ...command\n          };\n          bestScore = score;\n        }\n      }\n    }\n    if (bestMatch) {\n      bestMatch.confidence = bestScore;\n      console.log(`üéØ Command matched: ${bestMatch.id} (${bestScore.toFixed(2)})`);\n    }\n    return bestMatch;\n  }\n  calculateSimilarity(text1, text2) {\n    // Simple word-based similarity calculation\n    const words1 = text1.split(' ');\n    const words2 = text2.split(' ');\n\n    // Check for exact match first\n    if (text1 === text2) return 1.0;\n\n    // Check if all words of trigger are in transcript\n    const matchingWords = words2.filter(word => words1.some(w => w.includes(word) || word.includes(w)));\n    const similarity = matchingWords.length / words2.length;\n\n    // Bonus for word order\n    if (text1.includes(text2) || text2.includes(text1)) {\n      return Math.min(similarity + 0.2, 1.0);\n    }\n    return similarity;\n  }\n\n  // Public methods\n  isSupported() {\n    return this.recognition !== null;\n  }\n  startListening() {\n    if (!this.recognition || this.isListening) return;\n    try {\n      this.recognition.start();\n      console.log('üé§ Starting voice recognition...');\n    } catch (error) {\n      console.error('‚ùå Failed to start voice recognition:', error);\n    }\n  }\n  stopListening() {\n    if (!this.recognition || !this.isListening) return;\n    try {\n      this.recognition.stop();\n      console.log('üé§ Stopping voice recognition...');\n    } catch (error) {\n      console.error('‚ùå Failed to stop voice recognition:', error);\n    }\n  }\n  startPushToTalk() {\n    if (this.isPushToTalkActive) return;\n    this.isPushToTalkActive = true;\n    console.log('üé§ Push-to-talk activated');\n    this.emit('pushToTalkStart');\n    this.startListening();\n  }\n  stopPushToTalk() {\n    if (!this.isPushToTalkActive) return;\n    this.isPushToTalkActive = false;\n    console.log('üé§ Push-to-talk deactivated');\n    this.emit('pushToTalkStop');\n    this.stopListening();\n  }\n  updateSettings(newSettings) {\n    this.settings = {\n      ...this.settings,\n      ...newSettings\n    };\n    if (this.recognition) {\n      this.recognition.lang = this.settings.language;\n      this.recognition.continuous = this.settings.continuous;\n      this.recognition.interimResults = this.settings.interimResults;\n      this.recognition.maxAlternatives = this.settings.maxAlternatives;\n    }\n  }\n  getSettings() {\n    return {\n      ...this.settings\n    };\n  }\n  addCommand(command) {\n    this.commands.push(command);\n    console.log(`üéØ Added voice command: ${command.id}`);\n  }\n  removeCommand(commandId) {\n    this.commands = this.commands.filter(cmd => cmd.id !== commandId);\n    console.log(`üóëÔ∏è Removed voice command: ${commandId}`);\n  }\n  getCommands() {\n    return [...this.commands];\n  }\n  setPushToTalkKey(key) {\n    this.pushToTalkKey = key;\n    console.log(`üé§ Push-to-talk key set to: ${key}`);\n  }\n\n  // Event system\n  on(event, callback) {\n    this.callbacks.set(event, callback);\n  }\n  off(event) {\n    this.callbacks.delete(event);\n  }\n  emit(event, data) {\n    const callback = this.callbacks.get(event);\n    if (callback) {\n      callback(data);\n    }\n\n    // Also dispatch window event for global listening\n    window.dispatchEvent(new CustomEvent(`voice:${event}`, {\n      detail: data\n    }));\n  }\n\n  // Cleanup\n  destroy() {\n    if (this.recognition) {\n      this.recognition.abort();\n    }\n    if (this.keyDownListener && this.keyUpListener) {\n      document.removeEventListener('keydown', this.keyDownListener);\n      document.removeEventListener('keyup', this.keyUpListener);\n    }\n    this.callbacks.clear();\n    console.log('üé§ Voice recognition service destroyed');\n  }\n\n  // Utility methods\n  async requestMicrophonePermission() {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      stream.getTracks().forEach(track => track.stop());\n      console.log('‚úÖ Microphone permission granted');\n      return true;\n    } catch (error) {\n      console.error('‚ùå Microphone permission denied:', error);\n      return false;\n    }\n  }\n  testVoiceRecognition() {\n    if (!this.isSupported()) {\n      console.error('‚ùå Voice recognition not supported');\n      return;\n    }\n    console.log('üß™ Testing voice recognition...');\n    this.on('result', result => {\n      console.log('üß™ Test result:', result);\n      this.off('result');\n    });\n    this.startListening();\n    setTimeout(() => {\n      this.stopListening();\n    }, 5000);\n  }\n}\n\n// Export singleton instance\nexport const voiceRecognitionService = new VoiceRecognitionService();\nexport default voiceRecognitionService;","map":{"version":3,"names":["VoiceRecognitionService","constructor","recognition","isListening","isPushToTalkActive","settings","callbacks","Map","keyDownListener","keyUpListener","pushToTalkKey","commands","id","trigger","godId","action","confidence","language","continuous","interimResults","maxAlternatives","threshold","initializeRecognition","setupPushToTalk","window","console","error","SpeechRecognition","webkitSpeechRecognition","lang","onstart","log","emit","onend","onerror","event","onresult","handleRecognitionResult","e","code","isInputFocused","preventDefault","startPushToTalk","stopPushToTalk","document","addEventListener","activeElement","HTMLInputElement","HTMLTextAreaElement","getAttribute","finalTranscript","interimTranscript","i","resultIndex","results","length","result","transcript","isFinal","recognitionResult","trim","timestamp","Date","command","parseCommand","lowerTranscript","toLowerCase","bestMatch","bestScore","score","calculateSimilarity","toFixed","text1","text2","words1","split","words2","matchingWords","filter","word","some","w","includes","similarity","Math","min","isSupported","startListening","start","stopListening","stop","updateSettings","newSettings","getSettings","addCommand","push","removeCommand","commandId","cmd","getCommands","setPushToTalkKey","key","on","callback","set","off","delete","data","get","dispatchEvent","CustomEvent","detail","destroy","abort","removeEventListener","clear","requestMicrophonePermission","stream","navigator","mediaDevices","getUserMedia","audio","getTracks","forEach","track","testVoiceRecognition","setTimeout","voiceRecognitionService"],"sources":["D:/AI-Gods/src/services/voiceRecognition.ts"],"sourcesContent":["// Type definitions for Speech Recognition API\r\ndeclare global {\r\n  interface Window {\r\n    SpeechRecognition: any;\r\n    webkitSpeechRecognition: any;\r\n  }\r\n}\r\n\r\ninterface VoiceCommand {\r\n  id: string;\r\n  trigger: string[];\r\n  godId?: string;\r\n  action: 'summon' | 'ritual' | 'offering' | 'question' | 'dismiss' | 'council';\r\n  parameters?: Record<string, any>;\r\n  confidence: number;\r\n}\r\n\r\ninterface VoiceRecognitionResult {\r\n  transcript: string;\r\n  confidence: number;\r\n  command?: VoiceCommand;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface VoiceSettings {\r\n  language: string;\r\n  continuous: boolean;\r\n  interimResults: boolean;\r\n  maxAlternatives: number;\r\n  threshold: number; // Confidence threshold\r\n}\r\n\r\nclass VoiceRecognitionService {\r\n  private recognition: any | null = null;\r\n  private isListening = false;\r\n  private isPushToTalkActive = false;\r\n  private settings: VoiceSettings;\r\n  private callbacks: Map<string, Function> = new Map();\r\n  private keyDownListener: ((e: KeyboardEvent) => void) | null = null;\r\n  private keyUpListener: ((e: KeyboardEvent) => void) | null = null;\r\n  private pushToTalkKey = ' '; // Spacebar\r\n  \r\n  // Predefined voice commands for gods and rituals\r\n  private commands: VoiceCommand[] = [\r\n    // God summoning commands\r\n    {\r\n      id: 'summon-aethon',\r\n      trigger: ['summon aethon', 'call aethon', 'invoke aethon', 'aethon appear'],\r\n      godId: 'aethon',\r\n      action: 'summon',\r\n      confidence: 0.7\r\n    },\r\n    {\r\n      id: 'summon-nyxara',\r\n      trigger: ['summon nyxara', 'call nyxara', 'invoke nyxara', 'nyxara appear'],\r\n      godId: 'nyxara',\r\n      action: 'summon',\r\n      confidence: 0.7\r\n    },\r\n    {\r\n      id: 'summon-zephyros',\r\n      trigger: ['summon zephyros', 'call zephyros', 'invoke zephyros', 'zephyros appear'],\r\n      godId: 'zephyros',\r\n      action: 'summon',\r\n      confidence: 0.7\r\n    },\r\n    {\r\n      id: 'summon-korvain',\r\n      trigger: ['summon korvain', 'call korvain', 'invoke korvain', 'korvain appear'],\r\n      godId: 'korvain',\r\n      action: 'summon',\r\n      confidence: 0.7\r\n    },\r\n    {\r\n      id: 'summon-xerion',\r\n      trigger: ['summon xerion', 'call xerion', 'invoke xerion', 'xerion appear'],\r\n      godId: 'xerion',\r\n      action: 'summon',\r\n      confidence: 0.7\r\n    },\r\n    \r\n    // Ritual commands\r\n    {\r\n      id: 'start-ritual',\r\n      trigger: ['start ritual', 'begin ritual', 'perform ritual', 'initiate ceremony'],\r\n      action: 'ritual',\r\n      confidence: 0.8\r\n    },\r\n    {\r\n      id: 'make-offering',\r\n      trigger: ['make offering', 'present offering', 'give offering', 'offer tribute'],\r\n      action: 'offering',\r\n      confidence: 0.8\r\n    },\r\n    \r\n    // Council commands\r\n    {\r\n      id: 'convene-council',\r\n      trigger: ['convene council', 'start council', 'begin council', 'gather pantheon'],\r\n      action: 'council',\r\n      confidence: 0.8\r\n    },\r\n    \r\n    // Question commands\r\n    {\r\n      id: 'ask-question',\r\n      trigger: ['i have a question', 'answer me', 'tell me', 'explain'],\r\n      action: 'question',\r\n      confidence: 0.6\r\n    },\r\n    \r\n    // Dismissal commands\r\n    {\r\n      id: 'dismiss-god',\r\n      trigger: ['dismiss', 'go away', 'leave me', 'farewell', 'until next time'],\r\n      action: 'dismiss',\r\n      confidence: 0.7\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    this.settings = {\r\n      language: 'en-US',\r\n      continuous: false,\r\n      interimResults: true,\r\n      maxAlternatives: 3,\r\n      threshold: 0.6\r\n    };\r\n    \r\n    this.initializeRecognition();\r\n    this.setupPushToTalk();\r\n  }\r\n\r\n  private initializeRecognition(): void {\r\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\r\n      console.error('‚ùå Speech recognition not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    // @ts-ignore\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    this.recognition = new SpeechRecognition();\r\n\r\n    if (!this.recognition) return;\r\n\r\n    this.recognition.continuous = this.settings.continuous;\r\n    this.recognition.interimResults = this.settings.interimResults;\r\n    this.recognition.lang = this.settings.language;\r\n    this.recognition.maxAlternatives = this.settings.maxAlternatives;\r\n\r\n    this.recognition.onstart = () => {\r\n      console.log('üé§ Voice recognition started');\r\n      this.isListening = true;\r\n      this.emit('start');\r\n    };\r\n\r\n    this.recognition.onend = () => {\r\n      console.log('üé§ Voice recognition ended');\r\n      this.isListening = false;\r\n      this.emit('end');\r\n    };\r\n\r\n    this.recognition.onerror = (event) => {\r\n      console.error('‚ùå Voice recognition error:', event.error);\r\n      this.emit('error', event.error);\r\n    };\r\n\r\n    this.recognition.onresult = (event) => {\r\n      this.handleRecognitionResult(event);\r\n    };\r\n  }\r\n\r\n  private setupPushToTalk(): void {\r\n    this.keyDownListener = (e: KeyboardEvent) => {\r\n      if (e.code === 'Space' && !this.isPushToTalkActive && !this.isInputFocused()) {\r\n        e.preventDefault();\r\n        this.startPushToTalk();\r\n      }\r\n    };\r\n\r\n    this.keyUpListener = (e: KeyboardEvent) => {\r\n      if (e.code === 'Space' && this.isPushToTalkActive) {\r\n        e.preventDefault();\r\n        this.stopPushToTalk();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', this.keyDownListener);\r\n    document.addEventListener('keyup', this.keyUpListener);\r\n  }\r\n\r\n  private isInputFocused(): boolean {\r\n    const activeElement = document.activeElement;\r\n    return activeElement instanceof HTMLInputElement || \r\n           activeElement instanceof HTMLTextAreaElement ||\r\n           activeElement?.getAttribute('contenteditable') === 'true';\r\n  }\r\n\r\n  private handleRecognitionResult(event: any): void {\r\n    let finalTranscript = '';\r\n    let interimTranscript = '';\r\n\r\n    for (let i = event.resultIndex; i < event.results.length; i++) {\r\n      const result = event.results[i];\r\n      const transcript = result[0].transcript;\r\n      const confidence = result[0].confidence;\r\n\r\n      if (result.isFinal) {\r\n        finalTranscript += transcript;\r\n        \r\n        // Process the final result\r\n        const recognitionResult: VoiceRecognitionResult = {\r\n          transcript: finalTranscript.trim(),\r\n          confidence,\r\n          timestamp: new Date()\r\n        };\r\n\r\n        // Try to match voice commands\r\n        const command = this.parseCommand(recognitionResult.transcript);\r\n        if (command) {\r\n          recognitionResult.command = command;\r\n        }\r\n\r\n        console.log('üé§ Voice recognized:', recognitionResult);\r\n        this.emit('result', recognitionResult);\r\n      } else {\r\n        interimTranscript += transcript;\r\n        this.emit('interim', { transcript: interimTranscript, confidence });\r\n      }\r\n    }\r\n  }\r\n\r\n  private parseCommand(transcript: string): VoiceCommand | null {\r\n    const lowerTranscript = transcript.toLowerCase().trim();\r\n    \r\n    // Find the best matching command\r\n    let bestMatch: VoiceCommand | null = null;\r\n    let bestScore = 0;\r\n\r\n    for (const command of this.commands) {\r\n      for (const trigger of command.trigger) {\r\n        const score = this.calculateSimilarity(lowerTranscript, trigger);\r\n        if (score > bestScore && score >= command.confidence) {\r\n          bestMatch = { ...command };\r\n          bestScore = score;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (bestMatch) {\r\n      bestMatch.confidence = bestScore;\r\n      console.log(`üéØ Command matched: ${bestMatch.id} (${bestScore.toFixed(2)})`);\r\n    }\r\n\r\n    return bestMatch;\r\n  }\r\n\r\n  private calculateSimilarity(text1: string, text2: string): number {\r\n    // Simple word-based similarity calculation\r\n    const words1 = text1.split(' ');\r\n    const words2 = text2.split(' ');\r\n    \r\n    // Check for exact match first\r\n    if (text1 === text2) return 1.0;\r\n    \r\n    // Check if all words of trigger are in transcript\r\n    const matchingWords = words2.filter(word => \r\n      words1.some(w => w.includes(word) || word.includes(w))\r\n    );\r\n    \r\n    const similarity = matchingWords.length / words2.length;\r\n    \r\n    // Bonus for word order\r\n    if (text1.includes(text2) || text2.includes(text1)) {\r\n      return Math.min(similarity + 0.2, 1.0);\r\n    }\r\n    \r\n    return similarity;\r\n  }\r\n\r\n  // Public methods\r\n  public isSupported(): boolean {\r\n    return this.recognition !== null;\r\n  }\r\n\r\n  public startListening(): void {\r\n    if (!this.recognition || this.isListening) return;\r\n\r\n    try {\r\n      this.recognition.start();\r\n      console.log('üé§ Starting voice recognition...');\r\n    } catch (error) {\r\n      console.error('‚ùå Failed to start voice recognition:', error);\r\n    }\r\n  }\r\n\r\n  public stopListening(): void {\r\n    if (!this.recognition || !this.isListening) return;\r\n\r\n    try {\r\n      this.recognition.stop();\r\n      console.log('üé§ Stopping voice recognition...');\r\n    } catch (error) {\r\n      console.error('‚ùå Failed to stop voice recognition:', error);\r\n    }\r\n  }\r\n\r\n  public startPushToTalk(): void {\r\n    if (this.isPushToTalkActive) return;\r\n    \r\n    this.isPushToTalkActive = true;\r\n    console.log('üé§ Push-to-talk activated');\r\n    this.emit('pushToTalkStart');\r\n    this.startListening();\r\n  }\r\n\r\n  public stopPushToTalk(): void {\r\n    if (!this.isPushToTalkActive) return;\r\n    \r\n    this.isPushToTalkActive = false;\r\n    console.log('üé§ Push-to-talk deactivated');\r\n    this.emit('pushToTalkStop');\r\n    this.stopListening();\r\n  }\r\n\r\n  public updateSettings(newSettings: Partial<VoiceSettings>): void {\r\n    this.settings = { ...this.settings, ...newSettings };\r\n    \r\n    if (this.recognition) {\r\n      this.recognition.lang = this.settings.language;\r\n      this.recognition.continuous = this.settings.continuous;\r\n      this.recognition.interimResults = this.settings.interimResults;\r\n      this.recognition.maxAlternatives = this.settings.maxAlternatives;\r\n    }\r\n  }\r\n\r\n  public getSettings(): VoiceSettings {\r\n    return { ...this.settings };\r\n  }\r\n\r\n  public addCommand(command: VoiceCommand): void {\r\n    this.commands.push(command);\r\n    console.log(`üéØ Added voice command: ${command.id}`);\r\n  }\r\n\r\n  public removeCommand(commandId: string): void {\r\n    this.commands = this.commands.filter(cmd => cmd.id !== commandId);\r\n    console.log(`üóëÔ∏è Removed voice command: ${commandId}`);\r\n  }\r\n\r\n  public getCommands(): VoiceCommand[] {\r\n    return [...this.commands];\r\n  }\r\n\r\n  public setPushToTalkKey(key: string): void {\r\n    this.pushToTalkKey = key;\r\n    console.log(`üé§ Push-to-talk key set to: ${key}`);\r\n  }\r\n\r\n  // Event system\r\n  public on(event: string, callback: Function): void {\r\n    this.callbacks.set(event, callback);\r\n  }\r\n\r\n  public off(event: string): void {\r\n    this.callbacks.delete(event);\r\n  }\r\n\r\n  private emit(event: string, data?: any): void {\r\n    const callback = this.callbacks.get(event);\r\n    if (callback) {\r\n      callback(data);\r\n    }\r\n    \r\n    // Also dispatch window event for global listening\r\n    window.dispatchEvent(new CustomEvent(`voice:${event}`, { detail: data }));\r\n  }\r\n\r\n  // Cleanup\r\n  public destroy(): void {\r\n    if (this.recognition) {\r\n      this.recognition.abort();\r\n    }\r\n    \r\n    if (this.keyDownListener && this.keyUpListener) {\r\n      document.removeEventListener('keydown', this.keyDownListener);\r\n      document.removeEventListener('keyup', this.keyUpListener);\r\n    }\r\n    \r\n    this.callbacks.clear();\r\n    console.log('üé§ Voice recognition service destroyed');\r\n  }\r\n\r\n  // Utility methods\r\n  public async requestMicrophonePermission(): Promise<boolean> {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      stream.getTracks().forEach(track => track.stop());\r\n      console.log('‚úÖ Microphone permission granted');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('‚ùå Microphone permission denied:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public testVoiceRecognition(): void {\r\n    if (!this.isSupported()) {\r\n      console.error('‚ùå Voice recognition not supported');\r\n      return;\r\n    }\r\n\r\n    console.log('üß™ Testing voice recognition...');\r\n    this.on('result', (result: VoiceRecognitionResult) => {\r\n      console.log('üß™ Test result:', result);\r\n      this.off('result');\r\n    });\r\n    \r\n    this.startListening();\r\n    \r\n    setTimeout(() => {\r\n      this.stopListening();\r\n    }, 5000);\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const voiceRecognitionService = new VoiceRecognitionService();\r\nexport default voiceRecognitionService;\r\nexport type { VoiceCommand, VoiceRecognitionResult, VoiceSettings };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}